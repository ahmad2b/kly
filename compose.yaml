# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    ports:
      - 8000:8000
    environment:
      - DATABASE_USERNAME=luffy
      - DATABASE_PASSWORD=LP4dBClR5AmW
      - DATABASE_HOST=ep-bold-wildflower-215811.ap-southeast-1.aws.neon.tech
      - DATABASE_NAME=kly
      - APP_NAME=Kly.lol
      - SECRET_KEY="VT3BlbkFJmqaji32ruwrd43jmhb3s"
      - ALGORITHM = "HS256"
      - ACCESS_TOKEN_EXPIRE_MINUTES = 5
      - REFRESH_TOKEN_EXPIRE_MINUTES = 10
      - NEXT_PUBLIC_API_URL="https://www.kly.lol"
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_bm9ybWFsLWVsZXBoYW50LTI5LmNsZXJrLmFjY291bnRzLmRldiQ
      - CLERK_SECRET_KEY=sk_test_d3xKchKtkMhzhUsZb2eBaN7smhC428bfXZl7djTu4h
      - CLERK_BACKEND_API_URL=https://api.clerk.com/v1
      - CLERK_FRONTEND_API_URL=https://normal-elephant-29.clerk.accounts.dev
      - CLERK_JWKS_URL=https://normal-elephant-29.clerk.accounts.dev/.well-known/jwks.json
      - GEMINI_API_KEY=AIzaSyBz9bRK94o5_ABiw79ePY-3P0m0asqxma0
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

